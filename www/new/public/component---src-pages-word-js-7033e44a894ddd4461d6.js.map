{"version":3,"sources":["webpack:///./src/containers/Word/Field.js","webpack:///./src/containers/Word/PosWord.js","webpack:///../name/modules/universal-common-scripts/functions/asort_strings/asort_by_length_and_position.js","webpack:///./src/containers/Word/Pos.js","webpack:///../name/modules/universal-common-scripts/functions/asort_strings/asort_by_length_asc.js","webpack:///./src/containers/Word/FieldList.js","webpack:///./src/containers/Word/ViewWord.styled.js","webpack:///./src/containers/Word/ViewWordResults.js","webpack:///./src/containers/Word/ViewWordHome.js","webpack:///./src/containers/Word/ViewWord.js","webpack:///./src/containers/Word/index.js","webpack:///./src/pages/word.js","webpack:///./src/components/Hint.js"],"names":["Field","render","this","props","row","field","undefined","label","value","className","style","maxWidth","React","Component","PosWord","word","api_actions","to","asort_by_length_and_position_asc__helper","a","b","a_length","length","b_length","fix_min_length","a_rating_length","min_length","delta_length","b_rating_length","arr_positions","min_position","delta_position","prefer_position","state","advanced","expand","pos","pos_dict","slist_pos","slist_poss","poss","filter","w","key","slist_best","best","console","log","ListPoss","map","ListBest","ListShort","arr","ascending","asc","sort","toString","asort_by_length_asc","i","that","max_length","max_position","bind","asort_by_length_and_position","ListOk","Object","entries","tuple","val","ListBad","ListProper","ListUnknown","Hint","onClick","setState","icon","faAngleUp","marginBottom","faEllipsisH","Array","isArray","transform","Styled","styled","div","word_input","word_chunks","best_of","pos_best","all","faEdit","slice","Math","max","min","ceil","join","pi","pos1","pos2","ViewWord","ui_actions","RX__search_title","PageContent","ViewWordResults","ViewWordHome","Search","domains","title","placeholder","cue","connect","word_poss","input_str","chunks","dispatch","bindActionCreators","RootIndex","Layout","location","Word","styles","display","lineHeight","fontSize","fontWeight","padding","margin","children"],"mappings":"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","file":"component---src-pages-word-js-7033e44a894ddd4461d6.js","sourcesContent":["import React from 'react'\n\nclass Field extends React.Component {\n  render() {\n    // validate\n    let { row, field } = this.props\n    if (!row || typeof row[field] === undefined) {\n      return <p>No {field}</p>\n    }\n    // filter\n    let label = field\n    let value = row[field]\n    if (field === 'ws_sentiment') {\n      label = 'sentiment'\n      value = value >= 0 ? '👍' : value === -1 ? '👎' : 'undefined'\n\n    }\n    // display\n    return (\n      <div className={'ui-form-fieldset'}>\n\t\t\t\t<div className={'label'}>\n\t\t\t\t\t{label}\n\t\t\t\t</div>\n\t\t\t\t<div className={'value'} style={{ maxWidth: 10000 }}>\n\t\t\t\t\t{value}\n\t\t\t\t</div>\n\t\t\t</div>\n    )\n  }\n}\n\nexport default Field\n","import React from 'react'\nimport { Menu } from 'antd'\nimport { Link } from 'gatsby'\n\nclass Definitions extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      definitions: [],\n    }\n  }\n\n  componentDidMount() {\n    this.props.api_actions.definitions_list_get(this.props.word)\n      .then(defs => {\n        this.setState({\n          definitions: defs,\n        })\n      })\n  }\n\n  render() {\n    if (!this.state.definitions || !Array.isArray(this.state.definitions)) {\n      return null\n    }\n    let List = []\n    for (let def of this.state.definitions) {\n      List.push(<Menu.Item>{def}</Menu.Item>)\n    }\n    return (<Menu className={'antd-word-definitions-dropdown-menu'}>{List}</Menu>)\n  }\n}\n\nclass PosWord extends React.Component {\n  render() {\n    let { word, api_actions } = this.props\n    if (!word || word === ' ') {\n      return null\n    }\n    return (<>\n\t\t\t{/*<Dropdown overlay={<Definitions api_actions={api_actions} word={word}/>} trigger={['contextMenu']}>*/}\n      <span className={'posword'}>\n\t\t\t\t{/*{word},*/}\n        <Link to={`/word?word=${word}`} className=\"color-medium\">{word}</Link>,\n\t\t\t</span>\n      {/*</Dropdown>*/}\n\t\t</>)\n  }\n}\n\nexport default PosWord\n","import { asort_by_length_asc } from \"./index.js\";\n\n/**\n * Algorithm sort = by Length + by Position in array\n * @param arr {Array.<String>} - array of strings\n * @param prefer_position {number} - number to multiply position rating, to make it more important than length\n * @param fix_min_length {number} - absolute minimum allowed to be used as min_length (default 4)\n *      ex: if 4, algorithm will treat str.length of 2,3,4 the same\n * @return {Array.<String>} - array of strings\n */\nexport default function asort_by_length_and_position(arr, prefer_position = 10, fix_min_length = 0) {\n  // prepare ratings by length\n  let ascending = asort_by_length_asc([...arr]);\n  if (!ascending[0]) {\n    return arr;\n  }\n  // prepare ratings by position\n  let arr_positions = {};\n  for (let i in arr) {\n    let string = arr[i];\n    arr_positions[string] = i;\n  }\n  // compile ratings\n  // ${this} in [].sort()\n  let that = {\n    min_length: ascending[0].length,\n    max_length: ascending[ascending.length - 1].length,\n    min_position: 0,\n    max_position: arr.length,\n    delta_position: arr.length,\n    arr_positions: arr_positions,\n    prefer_position: prefer_position,\n  };\n  // ${this} fix & finish\n  if (fix_min_length) {\n    that.fix_min_length = fix_min_length;\n    that.min_length = fix_min_length;\n  }\n  that.delta_length = that.max_length - that.min_length;\n  // done\n  return arr.sort(asort_by_length_and_position_asc__helper.bind(that));\n};\n\n// helper function:\nfunction asort_by_length_and_position_asc__helper(a, b) {\n  // if length is less than absolute minimum, use absolute minimum\n  let a_length = a.length;\n  let b_length = b.length;\n  if (this.fix_min_length) {\n    if (a.length < this.fix_min_length) a_length = this.fix_min_length;\n    if (b.length < this.fix_min_length) b_length = this.fix_min_length\n  }\n  // lower number == good (prefer shorter words)\n  let a_rating_length = ((a_length - this.min_length) / this.delta_length);\n  let b_rating_length = ((b_length - this.min_length) / this.delta_length);\n  // lower number == good (lower index in array, so started closer to #1)\n  let a_position_length = ((this.arr_positions[a] - this.min_position) / this.delta_position) * this.prefer_position;\n  let b_position_length = ((this.arr_positions[b] - this.min_position) / this.delta_position) * this.prefer_position;\n  // combine the two\n  return (a_rating_length + a_position_length) - (b_rating_length + b_position_length);\n\n}","import React from 'react'\nimport Hint from 'src/components/Hint'\nimport PosWord from './PosWord'\nimport { faAngleUp, faEllipsisH } from '@fortawesome/pro-solid-svg-icons'\nimport { FontAwesomeIcon as FA } from '@fortawesome/react-fontawesome'\nimport { asort_by_length_and_position } from 'universal-common-scripts/functions/asort_strings/index.js'\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      advanced: props.expand || false,\n    }\n  }\n\n  render() {\n    let { pos, row, api_actions } = this.props\n    /*\n     * Validate\n     */\n    if (!pos || !row.pos_dict || !row.pos_dict[pos]) {\n      return null\n    }\n    let slist_pos = row.pos_dict[pos] || {}\n    let slist_poss = (row.poss && row.poss[pos] || []).filter(w => w !== row.key)\n    let slist_best = (row.best && row.best[pos] || []).filter(w => w !== row.key)\n    console.log('row', row)\n    /*\n     * Predefined lists of words\n     * info = [ 0-1 (bad-ok), 0-1 (ok-proper), 0-1 (ok-unknown) ]\n     * ok = [ 1, 0, 0 ]\n     */\n    let ListPoss = slist_poss.map(word => (\n      <PosWord api_actions={api_actions} key={word} word={word} />\n    ))\n    let ListBest = slist_best.map(word => (\n      <PosWord api_actions={api_actions} key={word} word={word} />\n    ))\n    let ListShort = asort_by_length_and_position(slist_best, 2).map(word => (\n      <PosWord api_actions={api_actions} key={word} word={word} />\n    ))\n    let ListOk = Object.entries(slist_pos).map((tuple) => {\n      let [word, info] = tuple\n      if (info.toString() === '1,0,0') {\n        return (<PosWord api_actions={api_actions} key={word} word={word} />)\n      }\n    }).filter(val => !!val)\n    let ListBad = Object.entries(slist_pos).map((tuple) => {\n      let [word, info] = tuple\n      if (info.toString() === '0,0,0') {\n        return (<PosWord api_actions={api_actions} key={word} word={word} />)\n      }\n    }).filter(val => !!val)\n    let ListProper = Object.entries(slist_pos).map((tuple) => {\n      let [word, info] = tuple\n      if (info[1] === 1) {\n        return (<PosWord api_actions={api_actions} key={word} word={word} />)\n      }\n    }).filter(val => !!val)\n    let ListUnknown = Object.entries(slist_pos).map((tuple) => {\n      let [word, info] = tuple\n      if (info[2] === 1) {\n        return (<PosWord api_actions={api_actions} key={word} word={word} />)\n      }\n    }).filter(val => !!val)\n    /*\n     * Render simple version:\n     */\n    if (!this.state.advanced) {\n      return (\n        <div className={'ui-form-section simple'}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{ListOk.length > 0 && <>\n\t\t\t\t\t\t\t<div className={'one'}><b>{pos}: </b></div>\n              {ListPoss.length > 0 &&\n              <div className=\"two posWords opacity50\" style={{ marginBottom: 15 }}>{ListPoss}</div>\n              }\n              {ListBest.length > 0 &&\n              <div className=\"two posWords opacity75\">{ListBest}</div>\n              }\n              {ListShort.length > 0 &&\n              <div className=\"two posWords opacity50\" style={{ marginBottom: 15 }}>{ListShort}</div>\n              }\n              <div className=\"two posWords\">{ListOk}</div>\n\t\t\t\t\t\t</>}\n            <div\n              className={'three'}\n              onClick={() => {\n                this.setState({ advanced: true })\n              }}\n            >\n\t\t\t\t\t\t\t<FA icon={faEllipsisH} className=\"faEllipsisH\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n      )\n    } else {\n      /*\n       * Render advanced version:\n       */\n      if (!ListOk.length && !ListBad.length && !ListProper.length && !ListUnknown.length) {\n        return null\n      }\n      return (\n        <div className={'ui-form-section advanced'}>\n\t\t\t\t\t<p className={'one'}>\n\t\t\t\t\t\t<b className=\"title\">\n\t\t\t\t\t\t\t{pos}:\n\t\t\t\t\t\t</b>\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<div className={'two'}>\n            {ListPoss.length > 0 &&\n            <p>\n              <Hint className={'color-accent-deep opacity50'}>Poss:</Hint>\n              <span className=\"two posWords opacity50\">{ListPoss}</span>\n            </p>\n            }\n            {ListBest.length > 0 &&\n            <p>\n\t\t\t\t\t\t\t{/*<sub>{<>&#128512;</>}: </sub>*/}\n              <Hint className={'color-accent-deep opacity50'}>Best:</Hint>\n\t\t\t\t\t\t\t<span className=\"posWords opacity50\">{ListBest}</span>\n\t\t\t\t\t\t</p>\n            }\n            {ListOk.length > 0 &&\n            <p>\n\t\t\t\t\t\t\t{/*<sub>{<>&#128512;</>}: </sub>*/}\n              <Hint className={'color-accent-deep opacity50'}>OK/Good:</Hint>\n\t\t\t\t\t\t\t<span className=\"posWords\">{ListOk}</span>\n\t\t\t\t\t\t</p>\n            }\n            {ListBad.length > 0 &&\n            <p>\n\t\t\t\t\t\t\t{/*<sub>{<>&#128545;</>}: </sub>*/}\n              <Hint className={'color-bad opacity50'}>Negative:</Hint>\n\t\t\t\t\t\t\t<span className=\"posWords\">{ListBad}</span>\n\t\t\t\t\t\t</p>\n            }\n            {ListProper.length > 0 &&\n            <p>\n\t\t\t\t\t\t\t{/*<sub>{<>&#127963;</>}: </sub>*/}\n              <Hint className={'color-light opacity75'}>Proper:</Hint>\n\t\t\t\t\t\t\t<span className=\"posWords\">{ListProper}</span>\n\t\t\t\t\t\t</p>\n            }\n            {ListUnknown.length > 0 &&\n            <p>\n\t\t\t\t\t\t\t{/*<sub>{<>&#10067;</>}: </sub>*/}\n              <Hint className={'color-light opacity75'}>Unknown sentiment:</Hint>\n\t\t\t\t\t\t\t<span className=\"posWords\">{ListUnknown}</span>\n\t\t\t\t\t\t</p>\n            }\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<p\n            className={'three'}\n            onClick={() => {\n              this.setState({ advanced: false })\n            }}\n          >\n\t\t\t\t\t\t<FA icon={faAngleUp} className=\"faAngleUp\" />\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n      )\n    }\n  }\n}\n","/**\n * Sort array by string length, ascending (or descending with false flag)\n * @param arr {Array<String|Number|Array>}\n * @param asc {boolean} - if false, will sort descending; default is ascending\n * @returns {array}\n */\nexport default function asort_by_length_asc(arr, asc = true) {\n\tif (!asc) {\n\t\treturn arr.sort((a, b) => b.toString().length - a.toString().length);\n\t} else {\n\t\treturn arr.sort((a, b) => a.toString().length - b.toString().length);\n\t}\n};","import React from 'react'\nimport { Link } from 'gatsby'\nimport { faEllipsisH, faAngleUp } from '@fortawesome/pro-solid-svg-icons'\nimport { FontAwesomeIcon as FA } from '@fortawesome/react-fontawesome'\n// import Hint from \"src/components/Hint\";\n\nconst PosWord = ({ word }) => (\n  <span className=\"posword\">\n\t\t<Link to={`/word?word=${word}`}>{word}</Link>\n\t,</span>\n)\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      advanced: false,\n    }\n  }\n\n  render() {\n    let { field, row } = this.props\n    /*\n     * Validate\n     */\n    if (!field || !Array.isArray(row[field])) {\n      return null\n    }\n    /*\n     * Predefined lists of words\n     * info = [ 0-1 (bad-ok), 0-1 (ok-proper), 0-1 (ok-unknown) ]\n     * ok = [ 1, 0, 0 ]\n     */\n    let ListOk = row[field].map((word, i) => {\n      return (<PosWord word={word} key={word + i} />)\n    }).filter(val => !!val)\n    /*\n     * Render simple version:\n     */\n    if (!this.state.advanced) {\n      return (\n        <div className={'ui-form-section simple'}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{ListOk.length > 0 && <>\n\t\t\t\t\t\t\t<div className={'one'}><b>{field}: </b></div>\n\t\t\t\t\t\t\t<div className=\"two fieldWords\">{ListOk}</div>\n\t\t\t\t\t\t</>}\n            <div\n              className={'three'}\n              onClick={() => {\n                this.setState({ advanced: true })\n              }}\n            >\n\t\t\t\t\t\t\t<FA icon={faEllipsisH} className=\"faEllipsisH\" style={{ transform: 'scale(0.85)' }} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n      )\n    } else {\n      /*\n       * Render advanced version:\n       */\n      return (\n        <div className={'ui-form-section advanced'}>\n\t\t\t\t\t<p className={'one'}>\n\t\t\t\t\t\t<b className=\"title\">\n\t\t\t\t\t\t\t{field}:\n\t\t\t\t\t\t</b>\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<div className={'two'}>\n\t\t\t\t\t\t{ListOk.length > 0 &&\n            <p className=\"fieldWords\">{ListOk}</p>\n            }\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<p\n            className={'three'}\n            onClick={() => {\n              this.setState({ advanced: false })\n            }}\n          >\n\t\t\t\t\t\t<FA icon={faAngleUp} className=\"faAngleUp\" style={{ transform: 'scale(0.85)' }} />\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n      )\n    }\n  }\n}\n","import styled from 'styled-components'\n\nexport const Styled = styled.div`\n  font-size: 1.125rem;\n  position: relative;\n  padding-top: 0.75rem;\n  padding-bottom: 1rem;\n\n  .editWordLink {\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    font-size: 2rem;\n    color: var(--color-subtle-deep);\n    z-index: 100;\n  }\n\n  .ui-form-section {\n    .one {\n    }\n    .two {\n    }\n    .three {\n      text-align: center;\n      cursor: pointer;\n      color: var(--color-subtle-deep);\n      white-space: nowrap;\n      font-size: 1.5rem;\n      margin: 1rem auto -1.5rem;\n      width: 5rem;\n\n      svg {\n        transform: scale(0.85);\n        display: inline-block;\n        top: -1rem;\n        position: relative;\n        background: var(--color-white);\n        padding: 0;\n      }\n    }\n    &.advanced {\n    }\n    &.simple {\n      .two {\n        position: relative;\n        white-space: nowrap;\n        overflow: hidden;\n        &:after {\n          content: '';\n          display: block;\n          position: absolute;\n          top: -0.5rem;\n          right: 0;\n          height: 2rem;\n          width: 60px;\n          background: linear-gradient(\n            to left,\n            var(--color-white) 0%,\n            transparent 100%\n          );\n        }\n      }\n    }\n  }\n\n  .posword {\n    padding: 0 0.5rem 0 0;\n    display: inline-block;\n    //cursor:pointer;\n    font-size: 1.125rem;\n    color: var(--color-medium);\n  }\n\n  .title {\n    font-size: 1.25rem;\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Field from './Field'\nimport Pos from './Pos'\nimport FieldList from './FieldList'\nimport { Styled } from './ViewWord.styled'\nimport { faEdit } from '@fortawesome/pro-solid-svg-icons'\nimport { FontAwesomeIcon as FA } from '@fortawesome/react-fontawesome'\n\nexport default function(props) {\n  /*\n   * User \"container\" state/props/methods!\n   * This \"child\" component is to simplify container's render() logic.\n   */\n  let that = props.that\n  let { word_input, word_chunks, api_actions } = that.props\n  if (word_input && (!word_chunks.length || !word_chunks[0].length || !word_chunks[0][0].key)) {\n    return (\n      <Styled className=\"ViewWord content\">\n        <p>Word not found</p>\n      </Styled>\n    )\n  }\n  let row = word_chunks[0][0]\n  let best_of = (row.pos_best || {}).all\n\n  return (\n    <Styled className=\"ViewWord content\">\n\t\t\t\t{/*Edit*/}\n      <Link className={'editWordLink'} to={`/edit_word?word=${row.key}`}>\n\t\t\t\t\t<FA icon={faEdit} className=\"faEdit\" style={{ transform: 'scale(0.85)' }} />\n\t\t\t\t</Link>\n\n      {/* Best of */}\n      <div className={'ui-form-fieldset'}>\n\t\t\t\t<div className={'label'}>\n\t\t\t\t\tbest:\n\t\t\t\t</div>\n\t\t\t\t<div className={'value'} style={{ maxWidth: 10000 }}>\n\t\t\t\t\t{best_of && best_of.map ? best_of.slice(0, Math.max(Math.min(Math.ceil(best_of.length / 4), 15), 6)).join(', ') : best_of}\n\t\t\t\t</div>\n\t\t\t</div>\n\n      {/*Fields*/}\n      <div className={'ui-form-section ui-form-fieldset-grid'}>\n\t\t\t\t\t{[\n            'key',\n            'root',\n            'singular',\n            'plural',\n            'abbreviation',\n            'acronym',\n            'list_count',\n            'agg_sentiment',\n            'ws_sentiment',\n          ]\n            .filter(field => (row[field] || row[field] === 0))\n            .map((field, pi) => (\n              <Field field={field} row={row} key={row.key + pi} />\n            ))}\n\t\t\t\t</div>\n      {/*Lists*/}\n      <div className={'ui-form-section'}>\n\t\t\t\t\t{[row.pos1, row.pos2, 'before', 'after', 'etymology', 'etc'].map((pos, pi) => (\n            <Pos api_actions={api_actions} pos={pos} row={row} key={pos + pi} expand={false} />\n          ))}\n        {['ok_list', 'list', 'derivations'].map((field, pi) => (\n          <FieldList field={field} row={row} key={row.key + pi} />\n        ))}\n\t\t\t\t</div>\n\t\t\t</Styled>\n  )\n}\n","import React from 'react';\nimport { Styled } from './ViewWord.styled';\n\nexport default function (props) {\n  /*\n   * User \"container\" state/props/methods!\n   * This \"child\" component is to simplify container's render() logic.\n   */\n  let that = props.that;\n\n  return (\n    <Styled className=\"ViewWord content\">\n      <p>Try it out &#9757;</p>\n      <p>More info/functionality coming soon!</p>\n      <p>This service is in stealth mode! Under active development.</p>\n    </Styled>\n  );\n}\n","import React from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport * as ui_actions from 'src/redux/actions/ui'\nimport api_actions from 'src/redux/actions/api'\nimport { StyledPage } from '../../components/Layout.styled'\nimport Search from '../../components/Search'\nimport ViewWordResults from './ViewWordResults'\nimport ViewWordHome from './ViewWordHome'\n\nclass ViewWord extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n    props.ui_actions.RX__search_title('Thesaurus Search:')\n  }\n\n  render() {\n    //window.doneLoading('render')\n    let { word_chunks, word_input } = this.props\n    /*\n     * Verify content:\n     */\n    let PageContent = null\n    if (word_input) {\n      PageContent = <ViewWordResults that={this} />\n    } else {\n      PageContent = <ViewWordHome that={this} />\n    }\n    /*\n     * Render content:\n     */\n    return (\n      <>\n        <Search\n          {...this.props}\n          className={(!word_input || !word_chunks.length) ? 'Search SearchHome' : 'Search'}\n          domains={false}\n          title=\"Another word for...\"\n          placeholder=\"...\"\n          cue={[\n            <span key=\"1\">The most useful thesaurus <span className=\"color-accent u\">API</span>&nbsp;</span>,\n            <span key=\"2\">for <>N</>atural <>L</>anguage <>P</>rocessing applications.</span>,\n          ]}\n        />\n\t\t\t\t<StyledPage>{PageContent}</StyledPage>\n\t\t\t</>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    ui_actions: bindActionCreators(ui_actions, dispatch),\n    api_actions: bindActionCreators(api_actions, dispatch),\n  }\n}\n\nconst mapStateToProps = function(state) {\n  return {\n    word_poss: state.word.poss,\n    word_input: state.word.input_str,\n    word_chunks: state.word.chunks,\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)((ViewWord))\n","import ViewWord from \"./ViewWord\";\n\nexport default ViewWord;\n","import React from 'react'\nimport Layout from '../components/Layout'\nimport Word from 'src/containers/Word'\n\nclass RootIndex extends React.Component {\n  render() {\n    return (\n      <Layout location={this.props.location}>\n        <Word location={this.props.location} />\n      </Layout>\n    )\n  }\n}\n\nexport default RootIndex","import React from 'react';\n\nconst styles = {\n\tHint: {\n\t\tdisplay: \"block\",\n\t\tlineHeight: \"1em\",\n\t\tfontSize: \"0.67em\",\n\t\tfontWeight: \"bold\",\n\t\tpadding: \"0\",\n\t\tmargin: \"0\",\n\t}\n};\n\nexport default (props) => {\n\t// validate\n\tlet {style = {}, className = '', children} = props;\n\tif (!children) {\n\t\treturn null;\n\t}\n\t// display\n\treturn (\n\t\t<span className={className} style={{...styles.Hint, ...style}}>{children}</span>\n\t)\n};\n"],"sourceRoot":""}