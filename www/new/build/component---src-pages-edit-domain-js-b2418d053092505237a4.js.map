{"version":3,"sources":["webpack:///./src/containers/Admin/EditDomain/EditDomain.styled.js","webpack:///./src/containers/Admin/EditDomain/DomExt.js","webpack:///./src/containers/Admin/EditDomain/EditDomainResults.js","webpack:///./src/containers/Admin/EditDomain/EditDomain.js","webpack:///./src/containers/Admin/EditDomain/index.js","webpack:///./src/pages/edit_domain.js"],"names":["Styled","styled","div","DomExt","render","this","props","row","key","menu","className","Item","Array","isArray","syns1","join","overlay","trigger","to","onClick","window","isLoading","domext","React","Component","TextArea","Input","that","state","dom","synsDict","all_domains","type","placeholder","value","onChange","event","setState","target","onKeyPress","a","submit_state_dom","icon","faPen","style","transform","faSave","Object","keys","length","entries","map","tuple","i","list","userSelect","faArrowDown","str","indexOf","PosWord","word","replace","faArrowUp","rows","syns","d","EditDomain","api_actions","data_domain_edit","res","data","getData","gotData","trim","w","filter","scrollTo","top","behavior","gotDataDict","tld","data_domain_get","data_domain_syns_dict","getAllDomains","data_domains_all","doms","componentDidMount","componentDidUpdate","prevProps","last","next","PageContent","EditDomainResults","Search","domains","hideInput","cue","connect","domain","tlds_user","dispatch","bindActionCreators","RootIndex","Layout","location"],"mappings":"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","file":"component---src-pages-edit-domain-js-b2418d053092505237a4.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Styled = styled.div`\n  font-size: 1rem;\n  position: relative;\n  padding-top: 1.125rem;\n  \n  h3 {\n    font-size: 1em;\n    font-weight:bold;\n    line-height: 2.67rem;\n    color: var(--color-dark);\n  }\n  .cue {\n    color: var(--color-light);\n  }\n\n  .columns {\n    //width: 3000px;\n  }\n  .column {\n    overflow: visible;\n    width: 200px;\n    margin: 0 30px 0 0;\n    //flex-grow: 0;\n  }\n  .dictKey {\n    margin: 1rem 0 0;\n    line-height: 1.75rem;\n    font-weight: bold;\n  }\n  .dictLine {\n    display:block;\n    &a&:hover{\n      color: var(--color-link);\n    }\n    &.syns2 {\n      white-space: pre;\n      font-size: 1.125rem;\n      color: var(--color-dark);\n      margin: 1.125rem 0 0 0;\n      line-height: 1.125rem;\n      padding-left: 0;\n      .posword {\n        padding-right: 0.5rem;\n      }\n    }\n    &.syns3{\n      font-size: 1rem;\n      color: var(--color-light);\n      white-space: pre;\n      margin: 0.125rem 0 0 0;\n      line-height: 1.125rem;\n      padding-left: 0.75rem;\n    }\n  }\n\n  .domain-section {\n    margin: 0 0 1rem 0;\n    padding: 1rem 0;\n    &:first-child {\n      padding-top: 0;\n    }\n    &:last-child {\n      border: none;\n    }\n    > .flexrow.posDiv {\n      position: absolute;\n      left: 0;\n    }\n  }\n  .domain-syns-paragraph {\n    line-height: 1.9rem;\n    > span {\n      color: var(--color-light);\n      padding-right: 0.5rem;\n      display: inline-block;\n      > span {\n        color: var(--color-dark);\n        font-size: 1.1rem;\n        display: inline-block;\n      }\n    }\n  }\n`;\n","import React from 'react'\nimport { Dropdown, Menu } from 'antd'\nimport { Link } from 'gatsby'\n\nclass DomExt extends React.Component {\n  render() {\n    if (!this.props.row || !this.props.row.key) {\n      return null\n    }\n    const menu = (\n      <Menu className={'antd-word-definitions-dropdown-menu'}>\n\t\t\t\t<Menu.Item>\n\t\t\t\t\t{(Array.isArray(this.props.row.syns1) ? this.props.row.syns1 : []).join(', ')}\n\t\t\t\t</Menu.Item>\n\t\t\t</Menu>\n    )\n    return (\n      <span>\n\t\t\t\t{/*\n\t\t\t\t * word\n\t\t\t\t*/}\n        <span className={'posword'}>\n\t\t\t\t\t<Dropdown overlay={menu} trigger={['hover']}>\n\t\t\t\t\t\t<Link\n              to={`/edit_domain?tld=${this.props.row.key}`}\n              onClick={() => {\n                window.isLoading('render')\n              }}\n            >\n\t\t\t\t\t\t\t{(this.props.domext === this.props.row.key)\n                ? <b><u>{this.props.row.key},</u></b>\n                : <>{this.props.row.key},</>\n              }\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Dropdown>\n\t\t\t\t</span>\n\t\t\t</span>\n    )\n  }\n}\n\nexport default DomExt\n","import { Styled } from './EditDomain.styled'\nimport { Button, Input } from 'antd'\nimport { Link } from 'gatsby'\nimport PosWord from 'src/components/EditWord/PosWord'\nimport DomExt from './DomExt'\nimport React from 'react'\nimport { faPen, faSave, faArrowUp, faArrowDown } from '@fortawesome/pro-solid-svg-icons'\nimport { FontAwesomeIcon as FA } from '@fortawesome/react-fontawesome'\n\nconst { TextArea } = Input\n\nexport default function(props) {\n  /*\n   * User \"container\" state/props/methods!\n   * This \"child\" component is to simplify container's render() logic.\n   */\n  let that = props.that\n  let { dom, synsDict, all_domains } = that.state\n\n  /*\n   * Render:\n   */\n  return (\n    <>\n\t\t\t<Styled className=\"EditDomain content\">\n\t\t\t\t{/*\n\t\t\t\t * FORM (.syns1)\n\t\t\t\t */}\n        <section className={'domain-section domain-edit'}>\n\t\t\t\t\t<h3>Edit \".{dom.key}\" synonyms-of-synonyms (words to be extrapolated):</h3>\n\t\t\t\t\t<div className={'flexrow posDiv'}>\n\t\t\t\t\t\t<span className={'flexgrow ui-field-input-group'}>\n\t\t\t\t\t\t\t<Input\n                type={'text'}\n                placeholder={'comma, separated, words, to add to OK terms...'}\n                value={dom.syns1}\n                onChange={event => {\n                  that.setState({\n                    dom: {\n                      ...dom,\n                      syns1: event.target.value,\n                    },\n                  })\n                }}\n                onKeyPress={async event => {\n                  if (event.key === 'Enter') {\n                    that.submit_state_dom()\n                  }\n                }}\n              />\n\t\t\t\t\t\t\t<Button\n                type={'primary'}\n                onClick={async () => {\n                  that.submit_state_dom()\n                }}\n              >\n\t\t\t\t\t\t\t\t<FA icon={faPen} className=\"faPen\" style={{ transform: 'scale(0.85)' }} />\n\t\t\t\t\t\t\t\t<b>&nbsp;+&nbsp;</b>\n\t\t\t\t\t\t\t\t<FA icon={faSave} className=\"faSave\" style={{ transform: 'scale(0.85)' }} />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\n        {/*\n\t\t\t\t * RESULTS (synonyms of each word)\n\t\t\t\t */}\n        {synsDict && Object.keys(synsDict).length > 0 && (\n          <section className={'domain-section domain-view'}>\n            <div className=\"cue\">user will see \"<b>.{dom.key}</b>\" extension if they type in any of these words: </div>\n\t\t\t\t\t\t<div className={'domain-syns-paragraph columns'}>\n\t\t\t\t\t\t\t{Object.entries(synsDict).map((tuple, i) => {\n                let key = tuple[0]\n                let list = tuple[1]\n                return (\n                  <div key={key + i + 'col'} className=\"column\">\n\t\t\t\t\t\t\t\t\t\t<h3 className=\"dictKey\" style={{ userSelect: 'none' }}>\n\t\t\t\t\t\t\t\t\t\t\t<Link to={'/edit_word?word=' + key} target=\"_blank\">\n\t\t\t\t\t\t\t\t\t\t\t\t{key}&thinsp;&thinsp;\n                        <FA icon={faArrowDown} className=\"faArrowDown\" style={{ transform: 'scale(0.85)' }} />\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t{list.map((str, i) => (\n                        str.indexOf('_') !== 0\n                          ? <PosWord key={str + i + 'str'} word={str} row={{ key: key }} className=\"dictLine syns2\">{str},</PosWord>\n                          : <div key={str + i + 'str'} className=\"dictLine syns3\">{str.replace(/_/g, '')}</div>\n                      ))}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<h3 className=\"dictKey\" style={{ userSelect: 'none' }}>\n\t\t\t\t\t\t\t\t\t\t\t<Link to={'/edit_word?word=' + key} target=\"_blank\">\n                        <FA icon={faArrowUp} className=\"faArrowUp\" style={{ transform: 'scale(0.85)' }} />\n                        &thinsp;&thinsp;{key}\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t</div>\n                )\n              })}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n        )}\n\n        {/*\n\t\t\t\t * FORM (.syns)\n\t\t\t\t */}\n        <section className={'domain-section domain-edit'}>\n\t\t\t\t\t<h3>Edit \".{dom.key}\" direct-synonyms (these words will be used as-is, will NOT be extrapolated):</h3>\n\t\t\t\t\t<div className={'posDiv'}>\n\t\t\t\t\t\t<span className={'flexgrow ui-field-input-group'}>\n\t\t\t\t\t\t\t<TextArea\n                placeholder='comma, separated, words, to add to OK terms...'\n                rows={50}\n                value={dom.syns}\n                onChange={event => {\n                  that.setState({\n                    dom: {\n                      ...dom,\n                      syns: event.target.value,\n                    },\n                  })\n                }}\n                onKeyPress={async event => {\n                  if (event.key === 'Enter') {\n                    that.submit_state_dom()\n                  }\n                }}\n              />\n\t\t\t\t\t\t\t<Button\n                type={'primary'}\n                onClick={async () => {\n                  that.submit_state_dom()\n                }}\n              >\n\t\t\t\t\t\t\t\t<FA icon={faPen} className=\"faPen\" style={{ transform: 'scale(0.85)' }} />\n\t\t\t\t\t\t\t\t<b>&nbsp;+&nbsp;</b>\n\t\t\t\t\t\t\t\t<FA icon={faSave} className=\"faSave\" style={{ transform: 'scale(0.85)' }} />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\n        {/*\n\t\t\t\t * All Domains\n\t\t\t\t */}\n        {all_domains && all_domains.length > 0 && (\n          <section className={'domain-section domain-view'}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<b>all domains: &nbsp;</b>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<p className={'domain-syns-paragraph'}>\n\t\t\t\t\t\t\t{all_domains.map((d, i) => (\n                <DomExt key={d + i} row={d} domext={dom.key} />\n              ))}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</section>\n        )}\n\t\t\t</Styled>\n\t\t</>\n  )\n}\n","import React from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport api_actions from 'src/redux/actions/api'\nimport { StyledPage, StyledSearch } from '../../../components/Layout.styled'\nimport Search from '../../../components/Search'\nimport WordPoss from '../../../components/WordPoss'\nimport EditDomainResults from './EditDomainResults'\n\nclass EditDomain extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      synsDict: {},\n      dom: {},\n      all_domains: [],\n    }\n  }\n\n  submit_state_dom = async () => {\n    let res = await this.props.api_actions.data_domain_edit(this.state.dom)\n    if (res && res.data) {\n      this.getData()\n    }\n  }\n  gotData = dom => {\n    // dom is the DB row, from BE\n    let syns = dom.syns ? (dom.syns.trim() + ', ').replace(/[,]+/g, ',') : ''\n    let syns1 = Array.isArray(dom.syns1) ? dom.syns1 : []\n    // show new data\n    this.setState({\n      dom: {\n        ...dom,\n        // syns\n        syns: syns,\n        // convert syns1 to string\n        syns1:\n          syns1\n            .map(w => w.trim())\n            .filter(w => !!w)\n            .join(', ') + (syns1.length ? ', ' : ''),\n      },\n    })\n    // scroll to top\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    })\n  }\n  gotDataDict = dom => {\n    // show new data\n    this.setState({\n      synsDict: dom,\n    })\n  }\n  getData = async () => {\n    // get data\n    let { tld } = this.props\n    if (tld) {\n      // get row (tld, syns, syns1)\n      let dom = await this.props.api_actions.data_domain_get(tld)\n      if (dom && dom.key) {\n        this.gotData(dom)\n      }\n      // get expanded list of %ILIKE% results\n      let data = await this.props.api_actions.data_domain_syns_dict(tld)\n      if (data) {\n        this.gotDataDict(data)\n      }\n    }\n  }\n  getAllDomains = async () => {\n    let doms = await this.props.api_actions.data_domains_all()\n    this.setState({\n      all_domains: doms || [],\n    })\n  }\n\n  componentDidMount() {\n    this.getAllDomains()\n    if (this.props.tld) {\n      this.getData()\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    let last = prevProps.tld\n    let next = this.props.tld\n    if (next && next !== last) {\n      this.getData()\n    }\n  }\n\n  render() {\n    let { tld } = this.props\n    let { dom } = this.state\n\n    /*\n     * Verify content:\n     */\n    let PageContent = null\n    // nothing queried yet:\n    if (!tld) {\n      PageContent = <div className=\"page content\"> </div>\n    }\n    // no domain:\n    else if (!dom || !dom.key) {\n      PageContent = <div className=\"page content\">Not found \"<b>{tld}</b>\"</div>\n    }\n    // verified OK:\n    else {\n      PageContent = <EditDomainResults that={this} />\n    }\n\n    /*\n     * Render content:\n     */\n    return (\n      <>\n\t\t\t\t<StyledSearch>\n\t\t\t\t\t<Search\n            {...this.props}\n            domains={true}\n            hideInput={true}\n            cue={[\n              <span key=\"1\">&#9757; Choose a domain extension to edit.&nbsp;</span>,\n            ]}\n          />\n\t\t\t\t</StyledSearch>\n\n\t\t\t\t<StyledPage>{PageContent}</StyledPage>\n\t\t\t</>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    api_actions: bindActionCreators(api_actions, dispatch),\n  }\n}\n\nconst mapStateToProps = function(state) {\n  return {\n    tld: Object.keys(state.domain.tlds_user)[0],\n    tlds_user: state.domain.tlds_user,\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)((EditDomain))\n","import EditDomain from './EditDomain'\n\nexport default EditDomain\n","import React from 'react'\nimport Layout from '../components/Layout'\nimport EditDomain from 'src/containers/Admin/EditDomain'\n\nclass RootIndex extends React.Component {\n  render() {\n    return (\n      <Layout location={this.props.location}>\n        <EditDomain location={this.props.location} />\n      </Layout>\n    )\n  }\n}\n\nexport default RootIndex"],"sourceRoot":""}